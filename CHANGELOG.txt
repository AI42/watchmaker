Changes in version 0.4.0
------------------------

* Introduced framework support for interactive evolutionary algorithms.

* New example application based on Richard Dawkins' biomorph experiment.
  Demonstrates the new interactive features of the framework.

* Added new, extremely fast RNG - a Java port of Tony Pasqualoni's cellular
  automaton RNG (http://home.southernct.edu/~pasqualonia1/ca/report.html).

* Added ordered cross-over evolutionary operator for lists.

* Updated Travelling Salesman applet to optionally use cross-over as well as
  mutation.

* Introduced TerminationCondition interface and useful default implementations.
  Changed evolve methods in EvolutionEngine to take one or more conditions
  instead of explicitly specifying parameters such as number of generations,
  target fitness and timeout.


Changes in version 0.3.0
------------------------

* Removed java.util.BitSet operators and candidate factory.  BitSets are
  somewhat lacking as a generic bit string for genetic algorithms.

* Introduced a new general-purpose BitString type with an associated candidate
  factory plus mutation and cross-over operators.

* Added probabilities to cross-over implementations so that parents may
  sometimes pass through the operator unaltered.  A similar effect could have
  been achieved previously by combining the cross-over operator with a
  SplitEvolution operator that processed some of the individuals with an
  IdentityOperator, but this is more straightforward.

* Modified cross-over operators so that the cross-over index is always
  non-zero.  This means all cross-overs are meaningful.  With a zero index,
  each parent is split before the first position, making the cross-over
  effectively a no-op.  This change was required in order to honour the new
  cross-over probability, and is also sensible in its own right.

* Removed varargs constructor from EvolutionPipeline since it was impossible
  to invoke without generating a compiler warning about generic array
  creation.

* Fixed very slightly skewed probability in StringMutation.

* Fixed bug in RouletteWheelSelection.

* Improved Travelling Salesman applet to allow different selection strategies
  to be applied.

* More unit test cases and improved API documentation.


Changes in version 0.2.2
------------------------

* Renamed classes for generating random values from various probability
  distributions.  Now called "generators" rather than "sequences" in order to
  avoid confusion with mathematical sequences.

* Changed terminology for different fitness scoring schemes to be consistent
  with the literature (what was called 'normalised fitness' is now called
  'natural fitness').

* Refactored fitness-proportionate selection strategies.

* Fixed tournament selection bug.

* Moved the compound evolutionary operators (SplitEvolution and
  EvolutionPipeline) introduced in the previous release into the operators
  package.

* Introduced an IdentityOperator for use with SplitEvolution to enable some
  candidates to be preserved unchanged (this is different from elitism
  because it does not depend on fitness).


Changes in version 0.2.1
------------------------

* Reworked evolutionary operators to allow more flexibility.  Specifically,
  evolution can now be split into separate streams, which enables common
  genetic programming techniques to be used.

* Simplified the use of generics within the API.

* Fixed bug with pre-seeding populations.


Changes in version 0.2
----------------------

* Added support for concurrent fitness evaluations to take advantage of
  multi-core and multi-processor machines.

* Modified the way elitism is configured (the number of candidates to preserve
  is now specifed as an argument to the evolve method of the EvolutionEngine).

* Converted the Travelling Salesman example program into an applet that allows
  parameters to be tweaked and performance to be compared to a brute force
  implementation.

* Fixed RNG seeding to work in an untrusted applet environment (previously
  SecurityExceptions were thrown when attempting to access resources for
  seeding).